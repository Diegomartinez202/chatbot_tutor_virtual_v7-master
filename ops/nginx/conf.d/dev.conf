# ops/nginx/conf.d/dev.conf
# Nginx dev: expone admin-dev (5173), backend-dev (8000) y Rasa (5005) en localhost:8080

# WebSocket helpers
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
  listen 80 default_server;
  server_name _;

  client_max_body_size 50m;

  # ---------- FRONTEND (Vite dev) ----------
  # Todo lo que NO sea /api, /rasa, /ws, /static -> Vite
  location / {
    proxy_pass http://admin-dev:5173;
    proxy_http_version 1.1;

    # HMR / WebSocket
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    # Cabeceras proxy
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Vite mantiene conexiones abiertas
    proxy_read_timeout 86400;
    proxy_send_timeout 86400;
  }

  # Rutas internas de Vite (por si el server es más estricto)
  location /@vite/         { proxy_pass http://admin-dev:5173; proxy_set_header Host $host; }
  location /@react-refresh { proxy_pass http://admin-dev:5173; proxy_set_header Host $host; }
  location /node_modules/  { proxy_pass http://admin-dev:5173; proxy_set_header Host $host; }
  location /vite/          { proxy_pass http://admin-dev:5173; proxy_set_header Host $host; }

  # ---------- ESTÁTICOS BACKEND ----------
  location /static/ {
    proxy_pass http://backend-dev:8000/static/;
    proxy_http_version 1.1;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Evita bloqueos CORP/COEP y caché agresivo
    add_header Cross-Origin-Resource-Policy cross-origin always;
    add_header Cross-Origin-Embedder-Policy unsafe-none always;
    add_header Cache-Control "no-cache";
  }

  # ---------- API BACKEND ----------
  # OJO: proxy_pass con / final para que /api/foo -> backend-dev:8000/foo
  location /api/ {
    # CORS rápido para dev (opcional)
    if ($request_method = OPTIONS) {
      add_header Access-Control-Allow-Origin      $http_origin always;
      add_header Access-Control-Allow-Credentials "true" always;
      add_header Access-Control-Allow-Methods     "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
      add_header Access-Control-Allow-Headers     "Authorization,Content-Type,Accept,Origin,User-Agent" always;
      return 204;
    }
    add_header Access-Control-Allow-Origin      $http_origin always;
    add_header Access-Control-Allow-Credentials "true" always;

    proxy_pass http://backend-dev:8000/;
    proxy_http_version 1.1;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # ---------- RASA ----------
  # health real de Rasa (no pasa por /webhooks/rest/)
  location = /rasa/status {
    proxy_pass http://rasa:5005/status;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
  }

  # REST webhook (lo que usa el widget REST)
  location /rasa/ {
    proxy_pass http://rasa:5005/webhooks/rest/;
    proxy_http_version 1.1;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # WebSocket (si lo usas)
  location /ws/ {
    proxy_pass http://rasa:5005/ws/;
    proxy_http_version 1.1;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_read_timeout 86400;
    proxy_send_timeout 86400;
  }
}
