name: tutorbot-local
services:
  action-server:
    profiles:
      - build
      - prod
    build:
      context: C:\Users\USUARIO\Desktop\chatbot_tutor_virtual_v7.3
      dockerfile: rasa_action_server/Dockerfile
    container_name: action-server
    environment:
      ACTIONS_LOG_LEVEL: INFO
      HELPDESK_WEBHOOK: http://backend:8000/api/helpdesk/tickets
    networks:
      app-net: null
    ports:
      - mode: ingress
        target: 5055
        published: "5055"
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: bind
        source: C:\Users\USUARIO\Desktop\chatbot_tutor_virtual_v7.3\rasa
        target: /app/rasa
        bind:
          create_host_path: true
  admin-dev:
    profiles:
      - build
    command:
      - sh
      - -lc
      - npm ci && npm run dev -- --host --port 5173
    container_name: admin-dev
    depends_on:
      backend-dev:
        condition: service_started
        required: true
    environment:
      VITE_API_BASE: http://localhost:8000
      VITE_RASA_HTTP: http://localhost:5005
      VITE_RASA_WS: ws://localhost:5005
    image: node:18-alpine
    networks:
      app-net: null
    ports:
      - mode: ingress
        target: 5173
        published: "5173"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\USUARIO\Desktop\chatbot_tutor_virtual_v7.3\admin_panel_react
        target: /app
        bind:
          create_host_path: true
    working_dir: /app
  backend-dev:
    profiles:
      - build
    build:
      context: C:\Users\USUARIO\Desktop\chatbot_tutor_virtual_v7.3\backend
      dockerfile: Dockerfile
      target: dev
    container_name: backend-dev
    depends_on:
      mongo:
        condition: service_started
        required: true
      rasa:
        condition: service_started
        required: true
      redis:
        condition: service_started
        required: true
    environment:
      ACCESS_TOKEN_EXPIRE_MINUTES: "60"
      ADMIN_EMAIL: admin@example.com
      ADMIN_REGISTRATION_OPEN: "true"
      ALLOWED_ORIGINS: http://localhost:5173,http://localhost:8080,https://tu-frontend.com
      APP_ENV: dev
      AUDIO_TTL_DAYS: "7"
      AWS_ACCESS_KEY_ID: ""
      AWS_S3_BUCKET_NAME: chatbot-tutor-exports
      AWS_S3_ENDPOINT_URL: https://s3.amazonaws.com
      AWS_S3_REGION: us-east-1
      AWS_SECRET_ACCESS_KEY: ""
      BASE_URL: http://localhost:8000
      DEBUG: "true"
      EMAIL_FROM: demo@example.com
      EMAIL_TO: admin@example.com
      EMBED_ALLOWED_ORIGINS: self
      EMBED_ENABLED: "true"
      FAVICON_PATH: backend/static/favicon.ico
      FIRST_ADMIN_IS_ADMIN: "true"
      FRAME_ANCESTORS: self
      FRONTEND_SITE_URL: http://localhost:5173
      HELPDESK_KIND: webhook
      HELPDESK_TOKEN: ""
      HELPDESK_WEBHOOK: http://localhost:8000/api/helpdesk/tickets
      JWT_ALGORITHM: HS256
      LOG_DIR: logs
      LOGIN_BLOCK_MINUTES: "15"
      LOGIN_MAX_ATTEMPTS: "5"
      MIN_PASSWORD_LEN: "8"
      MONGO_DB: chatbot_admin
      MONGO_DB_NAME: chatbot_tutor_virtual_v2
      MONGO_URI: mongodb://mongo:27017/chatbot_tutor_virtual_v2
      MONGO_URL: mongodb://localhost:27017
      MONGODB_DB: chatbot_tutor_virtual_v2
      MONGODB_URL: mongodb://localhost:27017
      PW_REQUIRE_DIGIT: "true"
      PW_REQUIRE_LOWER: "true"
      PW_REQUIRE_SYMBOL: "true"
      PW_REQUIRE_UPPER: "true"
      RASA_DATA_PATH: rasa/data/nlu.yml
      RASA_DOMAIN_PATH: rasa/domain.yml
      RASA_MODEL_PATH: rasa/models
      RASA_REST_URL: http://localhost:5005/webhooks/rest/webhook
      RASA_TRAIN_COMMAND: rasa train
      RASA_URL: http://rasa:5005
      RASA_WS_URL: ws://localhost:5005/ws
      RATE_LIMIT_BACKEND: redis
      RATE_LIMIT_ENABLED: "true"
      RATE_LIMIT_MAX_REQUESTS: "60"
      RATE_LIMIT_PROVIDER: builtin
      RATE_LIMIT_WINDOW_SEC: "60"
      REDIS_URL: redis://redis:6379/0
      REFRESH_COOKIE_NAME: rt
      REFRESH_TOKEN_EXPIRE_DAYS: "7"
      SECRET_KEY: REEMPLAZA_CON_UNA_SECRETA_LARGA
      SMTP_PASS: demo
      SMTP_PORT: "587"
      SMTP_SERVER: localhost
      SMTP_USER: demo@example.com
      STATIC_DIR: backend/static
      TEMPLATE_DIR: backend/templates
      http: //localhost:5173 http://localhost:8080
    healthcheck:
      test:
        - CMD
        - sh
        - -lc
        - curl -fsS http://127.0.0.1:8000/chat/health || exit 1
      timeout: 5s
      interval: 30s
      retries: 5
    networks:
      app-net: null
    ports:
      - mode: ingress
        target: 8000
        published: "8000"
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: bind
        source: C:\Users\USUARIO\Desktop\chatbot_tutor_virtual_v7.3\backend
        target: /app/backend
        bind:
          create_host_path: true
  mongo:
    profiles:
      - build
      - prod
    container_name: mongo
    image: mongo:6
    networks:
      app-net: null
    ports:
      - mode: ingress
        target: 27017
        published: "27017"
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: volume
        source: mongo-data
        target: /data/db
        volume: {}
  nginx-dev:
    profiles:
      - build
    container_name: nginx-dev
    depends_on:
      admin-dev:
        condition: service_started
        required: true
      backend-dev:
        condition: service_started
        required: true
      rasa:
        condition: service_started
        required: true
    image: nginx:1.27-alpine
    networks:
      app-net: null
    ports:
      - mode: ingress
        target: 80
        published: "80"
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: bind
        source: C:\Users\USUARIO\Desktop\chatbot_tutor_virtual_v7.3\ops\nginx\conf.d
        target: /etc/nginx/conf.d
        read_only: true
        bind:
          create_host_path: true
  rasa:
    profiles:
      - build
      - prod
    build:
      context: C:\Users\USUARIO\Desktop\chatbot_tutor_virtual_v7.3\rasa
      dockerfile: Dockerfile
    container_name: rasa
    depends_on:
      action-server:
        condition: service_started
        required: true
    environment:
      ACTION_SERVER_URL: http://action-server:5055/webhook
      RASA_AUTOTRAIN: "true"
      RASA_PORT: "5005"
    healthcheck:
      test:
        - CMD
        - sh
        - -lc
        - wget -qO- http://127.0.0.1:5005/status | grep -q 'version'
      timeout: 5s
      interval: 30s
      retries: 5
    networks:
      app-net: null
    ports:
      - mode: ingress
        target: 5005
        published: "5005"
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: bind
        source: C:\Users\USUARIO\Desktop\chatbot_tutor_virtual_v7.3\rasa
        target: /app/rasa
        bind:
          create_host_path: true
  redis:
    command:
      - redis-server
      - --appendonly
      - "yes"
    container_name: redis
    image: redis:7-alpine
    networks:
      app-net: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    volumes:
      - type: volume
        source: redis-data
        target: /data
        volume: {}
networks:
  app-net:
    name: tutorbot-local_app-net
    driver: bridge
volumes:
  mongo-data:
    name: tutorbot-local_mongo-data
  redis-data:
    name: tutorbot-local_redis-data

