# endpoints.mongo.tpl.yml

# Endpoint de acciones
action_endpoint:
  url: "${ACTION_SERVER_URL}"

# Tracker store en MongoDB (con soporte de autenticación por ENV)
tracker_store:
  # Usa la clase explícita para evitar warnings
  type: rasa.core.tracker_store.MongoTrackerStore
  url: "${TRACKER_MONGO_URL}"
  db: "${TRACKER_MONGO_DB}"
  collection: "${TRACKER_MONGO_COLLECTION}"
  # Auth opcional (dejar vacíos si no se usan)
  username: "${TRACKER_MONGO_USERNAME:-}"
  password: "${TRACKER_MONGO_PASSWORD:-}"
  auth_source: "${TRACKER_MONGO_AUTHSOURCE:-}"

# Event broker en RabbitMQ (Pika)
event_broker:
  # Clase correcta para RabbitMQ en Rasa 3.6
  type: rasa.core.brokers.pika.PikaEventBroker

  # IMPORTANTE para tu versión de Rasa/Pika:
  # - "url" se usa como 1er argumento POSICIONAL (host)
  # - username/password/port/virtual_host van como kwargs
  # NO uses aquí una URL AMQP completa.
  url: "rabbitmq"

  # Credenciales y conexión (inyectadas por ENV del servicio `rasa`)
  username: "${RABBITMQ_USER:-guest}"
  password: "${RABBITMQ_PASSWORD:-guest}"
  port: 5672
  virtual_host: "/"

  # Opcionales: define la cola para evitar el warning
  queue: "${RABBITMQ_QUEUE:-rasa_events}"
  # exchange: "${RABBITMQ_EXCHANGE:-rasa}"
  # routing_key: "${RABBITMQ_ROUTING_KEY:-rasa_events}"

  # Robustez de conexión (opcional)
  # heartbeat: 60
  # connection_attempts: 20
  # retry_delay_in_seconds: 5