version: "3.9"

services:
  tester:
    image: python:3.10-slim
    container_name: tester
    working_dir: /app
    volumes:
      - ./:/app
    networks:
      - app-net          # <-- MISMA RED QUE nginx-dev
    environment:
      PROXY_BASE: "http://nginx-dev"      # Resuelve por DNS en la red
      BACKEND: "http://backend-dev:8000"
      RASA: "http://rasa:5005"
      PYTEST_PATH: "test"
      PYTEST_HTML: "reports/smoke.html"
      PYTHONUTF8: "1"
      PYTHONIOENCODING: "utf-8"
    command:
      - /bin/sh
      - -lc
      - |
        set -e
        echo "🐍 Python:"
        python -V

        echo "⬇️ Instalando dependencias de testing..."
        pip install --no-cache-dir -U pip
        # Requisitos del repo si existen
        if [ -f test/requirements-test.txt ]; then
          pip install --no-cache-dir -U -r test/requirements-test.txt
        fi
        # Asegura libs base:
        pip install --no-cache-dir -U \
          pytest pytest-timeout pytest-html pytest-metadata \
          requests python-dotenv pyjwt httpx respx pytest-asyncio

        echo "📂 PYTEST_PATH=$${PYTEST_PATH}"
        echo "📄 PYTEST_HTML=$${PYTEST_HTML}"
        mkdir -p "$(dirname "$${PYTEST_HTML}")"
        ls -la "$${PYTEST_PATH}" || true

        echo "🔎 Resolviendo nginx-dev desde dentro del contenedor…"
        getent hosts nginx-dev || (echo "❌ nginx-dev no se resuelve en DNS (red incorrecta)"; exit 1)

        echo "🚀 Ejecutando pytest…"
        pytest -q "$${PYTEST_PATH}" --disable-warnings --maxfail=1 \
          --html="$${PYTEST_HTML}" --self-contained-html

        echo "✅ Reporte generado en $${PYTEST_HTML}"

networks:
  app-net:
    external: true
    name: tutorbot-local_app-net   # <-- NOMBRE EXACTO DE TU RED EXTERNA
