# docker-compose.override.dev.yml
# Override adicional SOLO para desarrollo avanzado.
# Actívalo con:
#   docker compose -f docker-compose.yml -f docker-compose.override.dev.yml up --build

services:
  backend:
    profiles: ["build"]
    command: >
      sh -lc "exec uvicorn backend.main:app --reload --host 0.0.0.0 --port 8000"
    environment:
      # ✅ CORS/CSP para embed en desarrollo (ajusta según necesidad)
      ALLOWED_ORIGINS: "http://localhost:5173,http://localhost:8080"
      EMBED_ALLOWED_ORIGINS: "http://localhost:8080,http://localhost:5173"
      FRAME_ANCESTORS: "'self' http://localhost:8080 http://localhost:5173"
      # ✅ Demo y auth de chat
      DEMO_MODE: "true"
      CHAT_REQUIRE_AUTH: "false"

  admin:
    profiles: ["build"]
    command: >
      sh -lc "npm install && npm run dev -- --host --port 5173"
    environment:
      # Frontend → permite recibir postMessage solo de estos orígenes (si aplica)
      VITE_ALLOWED_HOST_ORIGINS: "http://localhost:8080,http://localhost:5173"
      # Hook useUserSettings → endpoint que ya expone el backend
      VITE_USER_SETTINGS_URL: "/api/me/settings"

  rasa:
    profiles: ["build"]
    # Si prefieres ejecutar la imagen oficial sin rebuild:
    # command: >
    #   sh -lc "pip install --no-cache-dir 'sqlalchemy<2.0' && rasa run --enable-api --cors '*' --port 5005"
    environment:
      SQLALCHEMY_SILENCE_UBER_WARNING: "1"
      SQLALCHEMY_WARN_20: "0"

  action-server:
    profiles: ["build"]

  nginx:
    profiles: ["build"]
    volumes:
      # ✅ corrige el mapeo; elimina el punto extra al final
      - ./ops/nginx/conf.d:/etc/nginx/conf.d
